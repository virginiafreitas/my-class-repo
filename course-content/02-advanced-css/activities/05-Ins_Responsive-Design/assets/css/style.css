* {
  box-sizing: border-box;
}

body {
  font-family: Arial;
  margin: 0;
}

header {
  padding: 40px;
  text-align: center;
  background: #13293d;
  color: #fff;
}

nav {
  display: flex;
  background-color: #d8a47f;
}

nav a {
  color: #13293d;
  padding: 14px 20px;
  text-decoration: none;
  text-align: center;
}

main {
  display: flex;
  flex-wrap: wrap;
}

aside {
  flex: 1;
  background-color: #b9c6ae;
  padding: 20px;
}


/* This is the shorthand for flex-grow, flex-shrink and flex-basis combined. 
The second and third parameters (flex-shrink and flex-basis) are optional. 
The default is 0 1 auto, but if you set it with a single number value, 
like flex: 3;, that changes the flex-basis to 0%, so itâ€™s like setting 
flex-grow: 3; flex-shrink: 1; flex-basis: 0%;. */

section {
  flex: 3;
  background-color: #fff;
  padding: 20px;
}

.sample-img {
  background-color: #fff;
  width: 100%;
  padding: 20px;
  height: 200px;
  border: 1px solid black;
}

footer {
  padding: 20px;
  text-align: center;
  background: #13293d;
  color: #fff;
}

@media screen and (max-width: 768px) {
  /* Use flex-direction to stack the navbar, sidebar, and body */
  main,
  nav {
    flex-direction: column;
    /*https://css-tricks.com/almanac/properties/f/flex-direction/*/
  }
  /* Make the sidebar stack below the body */
  aside {
    order: 2;/* appears second */
    /*oder in the sequence*/
    /*https://www.w3schools.com/cssref/css3_pr_order.asp*/
    /*Default value 0. Specifies the order for the flexible item*/
  }
  /* Change the header background */
  header {
    background: #772014;
  }
  /* Change the navbar and footer background */
  nav,
  footer {
    background-color: #bb8588;
  }
}
